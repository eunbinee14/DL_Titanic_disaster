import pandas as pd
import numpy as np
import torch
import torch.optim as optim
import warnings
warnings.filterwarnings('ignore')

input_dim = 5
hidden_dim = 6
output_dim = 1

EPOCHS = 400

X_data = []
X_test_data = []
Y_data = []

df_train = pd.read_csv("/kaggle/input/titanic/train.csv")   ## DataFrame은 엑셀표 의미
df_test = pd.read_csv("/kaggle/input/titanic/test.csv")


  
## Data Preprocessing
### 결측기가 많은 age 변수의 특징을 Name 변수의 last name을 가져와서 분석 후 대입시킨다

df_train['last_name'] = df_train.Name.map( lambda x: x.split(',')[1].split( '.' )[0].strip())

# inspect the amount of people for each title
df_train['last_name'].value_counts()
display(df_train)

df_test['last_name'] = df_test.Name.map( lambda x: x.split(',')[1].split( '.' )[0].strip())

df_test['last_name'].value_counts()
display(df_test)

  
df_train['last_name'] = df_train['last_name'].replace('Mlle', 'Miss')
df_train['last_name'] = df_train['last_name'].replace(['Mme','Lady','Ms'], 'Mrs')
df_train.last_name.loc[(df_train.last_name !=  'Master') & (df_train.last_name !=  'Mr') & (df_train.last_name !=  'Miss') 
             & (df_train.last_name !=  'Mrs')] = 'Others'

# inspect the amount of people for each title
df_train['last_name'].value_counts()


df_test['last_name'] = df_test['last_name'].replace('Mlle', 'Miss')
df_test['last_name'] = df_test['last_name'].replace(['Mme','Lady','Ms'], 'Mrs')
df_test.last_name.loc[(df_test.last_name !=  'Master') & (df_test.last_name !=  'Mr') & (df_test.last_name !=  'Miss') 
             & (df_test.last_name !=  'Mrs')] = 'Others'

# inspect the amount of people for each title
df_test['last_name'].value_counts()


  
